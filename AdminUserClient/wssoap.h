// This file is generated by KDAB's kdwsdl2cpp from WsSoap.wsdl.
// All changes you do to this file will be lost.
/*
    You may use and relicense this generated file without restriction.
*/
#ifndef WSSOAP_H
#define WSSOAP_H

#include <QtCore/QString>
#include <QtCore/QSharedData>
#include <KDSoapClient/KDDateTime.h>
#include <QtCore/QList>
#include <QtCore/QStringList>
#include <KDSoapClient/KDSoapJob.h>
#include <QtCore/QObject>
#include <KDSoapClient/KDSoapClientInterface.h>

class KDSoapMessage;
class KDSoapPendingCallWatcher;
class KDSoapValue;
QT_BEGIN_NAMESPACE
class Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__ArrayOfKeyValueOfdateTimeint;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__ArrayOfKeyValueOfintstring;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__ArrayOfKeyValueOfstringint;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__ArrayOfstring;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__KeyValueOfdateTimeint;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__KeyValueOfintstring;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__KeyValueOfstringArrayOfstringty7Ep6D1;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q1__KeyValueOfstringint;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q9__ArrayOfPage;
QT_END_NAMESPACE
QT_BEGIN_NAMESPACE
class Q9__Page;
QT_END_NAMESPACE
class Service;

class Q9__Page
{
public:
    void setId( int _id );
    int id() const;
    void setSite( const QString& _site );
    QString site() const;
    void setSitePage( const QString& _sitePage );
    QString sitePage() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q9__Page();
    ~Q9__Page();

public:
    Q9__Page( const Q9__Page& );
    Q9__Page &operator=( const Q9__Page& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__SendLinks
{
public:
    void setLinks( const Q1__ArrayOfstring& _links );
    Q1__ArrayOfstring links() const;
    void setUrl( const QString& _url );
    QString url() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SendLinks();
    ~TNS__SendLinks();

public:
    TNS__SendLinks( const TNS__SendLinks& );
    TNS__SendLinks &operator=( const TNS__SendLinks& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__KeyValueOfdateTimeint
{
public:
    void setKey( const KDDateTime& _key );
    KDDateTime key() const;
    void setValue( int _value );
    int value() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__KeyValueOfdateTimeint();
    ~Q1__KeyValueOfdateTimeint();

public:
    Q1__KeyValueOfdateTimeint( const Q1__KeyValueOfdateTimeint& );
    Q1__KeyValueOfdateTimeint &operator=( const Q1__KeyValueOfdateTimeint& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetDailyStats
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetDailyStats();
    ~TNS__GetDailyStats();

};

class TNS__GetPagesResponse
{
public:
    void setGetPagesResult( const Q9__ArrayOfPage& _getPagesResult );
    Q9__ArrayOfPage getPagesResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetPagesResponse();
    ~TNS__GetPagesResponse();

public:
    TNS__GetPagesResponse( const TNS__GetPagesResponse& );
    TNS__GetPagesResponse &operator=( const TNS__GetPagesResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__KeyValueOfstringint
{
public:
    void setKey( const QString& _key );
    QString key() const;
    void setValue( int _value );
    int value() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__KeyValueOfstringint();
    ~Q1__KeyValueOfstringint();

public:
    Q1__KeyValueOfstringint( const Q1__KeyValueOfstringint& );
    Q1__KeyValueOfstringint &operator=( const Q1__KeyValueOfstringint& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetNamesDictionary
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetNamesDictionary();
    ~TNS__GetNamesDictionary();

};

class TNS__GetSearchPhrasesResponse
{
public:
    void setGetSearchPhrasesResult( const Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1& _getSearchPhrasesResult );
    Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 getSearchPhrasesResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetSearchPhrasesResponse();
    ~TNS__GetSearchPhrasesResponse();

public:
    TNS__GetSearchPhrasesResponse( const TNS__GetSearchPhrasesResponse& );
    TNS__GetSearchPhrasesResponse &operator=( const TNS__GetSearchPhrasesResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__KeyValueOfstringArrayOfstringty7Ep6D1
{
public:
    void setKey( const QString& _key );
    QString key() const;
    void setValue( const Q1__ArrayOfstring& _value );
    Q1__ArrayOfstring value() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__KeyValueOfstringArrayOfstringty7Ep6D1();
    ~Q1__KeyValueOfstringArrayOfstringty7Ep6D1();

public:
    Q1__KeyValueOfstringArrayOfstringty7Ep6D1( const Q1__KeyValueOfstringArrayOfstringty7Ep6D1& );
    Q1__KeyValueOfstringArrayOfstringty7Ep6D1 &operator=( const Q1__KeyValueOfstringArrayOfstringty7Ep6D1& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__SetSiteResponse
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SetSiteResponse();
    ~TNS__SetSiteResponse();

};

class TNS__SetName
{
public:
    void setName( const QString& _name );
    QString name() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SetName();
    ~TNS__SetName();

public:
    TNS__SetName( const TNS__SetName& );
    TNS__SetName &operator=( const TNS__SetName& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__SetSearchPhraseResponse
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SetSearchPhraseResponse();
    ~TNS__SetSearchPhraseResponse();

};

class TNS__GetNamesResponse
{
public:
    void setGetNamesResult( const Q1__ArrayOfKeyValueOfintstring& _getNamesResult );
    Q1__ArrayOfKeyValueOfintstring getNamesResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetNamesResponse();
    ~TNS__GetNamesResponse();

public:
    TNS__GetNamesResponse( const TNS__GetNamesResponse& );
    TNS__GetNamesResponse &operator=( const TNS__GetNamesResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetPages
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetPages();
    ~TNS__GetPages();

};

class TNS__GetSearchPhrases
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetSearchPhrases();
    ~TNS__GetSearchPhrases();

};

class TNS__SendLinksResponse
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SendLinksResponse();
    ~TNS__SendLinksResponse();

};

class Q1__ArrayOfKeyValueOfstringint
{
public:
    void setKeyValueOfstringint( const QList< Q1__KeyValueOfstringint >& _keyValueOfstringint );
    QList< Q1__KeyValueOfstringint > keyValueOfstringint() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__ArrayOfKeyValueOfstringint();
    ~Q1__ArrayOfKeyValueOfstringint();

public:
    Q1__ArrayOfKeyValueOfstringint( const Q1__ArrayOfKeyValueOfstringint& );
    Q1__ArrayOfKeyValueOfstringint &operator=( const Q1__ArrayOfKeyValueOfstringint& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetNamesDictionaryResponse
{
public:
    void setGetNamesDictionaryResult( const Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1& _getNamesDictionaryResult );
    Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1 getNamesDictionaryResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetNamesDictionaryResponse();
    ~TNS__GetNamesDictionaryResponse();

public:
    TNS__GetNamesDictionaryResponse( const TNS__GetNamesDictionaryResponse& );
    TNS__GetNamesDictionaryResponse &operator=( const TNS__GetNamesDictionaryResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetStatsByNameResponse
{
public:
    void setGetStatsByNameResult( const Q1__ArrayOfKeyValueOfdateTimeint& _getStatsByNameResult );
    Q1__ArrayOfKeyValueOfdateTimeint getStatsByNameResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetStatsByNameResponse();
    ~TNS__GetStatsByNameResponse();

public:
    TNS__GetStatsByNameResponse( const TNS__GetStatsByNameResponse& );
    TNS__GetStatsByNameResponse &operator=( const TNS__GetStatsByNameResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1
{
public:
    void setKey( const KDDateTime& _key );
    KDDateTime key() const;
    void setValue( const Q1__ArrayOfKeyValueOfstringint& _value );
    Q1__ArrayOfKeyValueOfstringint value() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1();
    ~Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1();

public:
    Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1( const Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1& );
    Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 &operator=( const Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__SetNameResponse
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SetNameResponse();
    ~TNS__SetNameResponse();

};

class Q1__ArrayOfKeyValueOfintstring
{
public:
    void setKeyValueOfintstring( const QList< Q1__KeyValueOfintstring >& _keyValueOfintstring );
    QList< Q1__KeyValueOfintstring > keyValueOfintstring() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__ArrayOfKeyValueOfintstring();
    ~Q1__ArrayOfKeyValueOfintstring();

public:
    Q1__ArrayOfKeyValueOfintstring( const Q1__ArrayOfKeyValueOfintstring& );
    Q1__ArrayOfKeyValueOfintstring &operator=( const Q1__ArrayOfKeyValueOfintstring& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetLink
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetLink();
    ~TNS__GetLink();

};

class TNS__GetStatsResponse
{
public:
    void setGetStatsResult( const Q1__ArrayOfKeyValueOfstringint& _getStatsResult );
    Q1__ArrayOfKeyValueOfstringint getStatsResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetStatsResponse();
    ~TNS__GetStatsResponse();

public:
    TNS__GetStatsResponse( const TNS__GetStatsResponse& );
    TNS__GetStatsResponse &operator=( const TNS__GetStatsResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetDailyStatsResponse
{
public:
    void setGetDailyStatsResult( const Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1& _getDailyStatsResult );
    Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 getDailyStatsResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetDailyStatsResponse();
    ~TNS__GetDailyStatsResponse();

public:
    TNS__GetDailyStatsResponse( const TNS__GetDailyStatsResponse& );
    TNS__GetDailyStatsResponse &operator=( const TNS__GetDailyStatsResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1
{
public:
    void setKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1( const QList< Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 >& _keyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 );
    QList< Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 > keyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1();
    ~Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1();

public:
    Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1( const Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1& );
    Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 &operator=( const Q1__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetStats
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetStats();
    ~TNS__GetStats();

};

class Q1__KeyValueOfintstring
{
public:
    void setKey( int _key );
    int key() const;
    void setValue( const QString& _value );
    QString value() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__KeyValueOfintstring();
    ~Q1__KeyValueOfintstring();

public:
    Q1__KeyValueOfintstring( const Q1__KeyValueOfintstring& );
    Q1__KeyValueOfintstring &operator=( const Q1__KeyValueOfintstring& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__ArrayOfKeyValueOfdateTimeint
{
public:
    void setKeyValueOfdateTimeint( const QList< Q1__KeyValueOfdateTimeint >& _keyValueOfdateTimeint );
    QList< Q1__KeyValueOfdateTimeint > keyValueOfdateTimeint() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__ArrayOfKeyValueOfdateTimeint();
    ~Q1__ArrayOfKeyValueOfdateTimeint();

public:
    Q1__ArrayOfKeyValueOfdateTimeint( const Q1__ArrayOfKeyValueOfdateTimeint& );
    Q1__ArrayOfKeyValueOfdateTimeint &operator=( const Q1__ArrayOfKeyValueOfdateTimeint& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1
{
public:
    void setKeyValueOfstringArrayOfstringty7Ep6D1( const QList< Q1__KeyValueOfstringArrayOfstringty7Ep6D1 >& _keyValueOfstringArrayOfstringty7Ep6D1 );
    QList< Q1__KeyValueOfstringArrayOfstringty7Ep6D1 > keyValueOfstringArrayOfstringty7Ep6D1() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1();
    ~Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1();

public:
    Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1( const Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1& );
    Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1 &operator=( const Q1__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q9__ArrayOfPage
{
public:
    void setPage( const QList< Q9__Page >& _page );
    QList< Q9__Page > page() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q9__ArrayOfPage();
    ~Q9__ArrayOfPage();

public:
    Q9__ArrayOfPage( const Q9__ArrayOfPage& );
    Q9__ArrayOfPage &operator=( const Q9__ArrayOfPage& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__SendAmountDictionary
{
public:
    void setNamesAmountDictionary( const Q1__ArrayOfKeyValueOfstringint& _namesAmountDictionary );
    Q1__ArrayOfKeyValueOfstringint namesAmountDictionary() const;
    void setUrl( const QString& _url );
    QString url() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SendAmountDictionary();
    ~TNS__SendAmountDictionary();

public:
    TNS__SendAmountDictionary( const TNS__SendAmountDictionary& );
    TNS__SendAmountDictionary &operator=( const TNS__SendAmountDictionary& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1
{
public:
    void setKey( const QString& _key );
    QString key() const;
    void setValue( const Q1__ArrayOfKeyValueOfintstring& _value );
    Q1__ArrayOfKeyValueOfintstring value() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1();
    ~Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1();

public:
    Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1( const Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1& );
    Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 &operator=( const Q1__KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetStatsByName
{
public:
    void setName( const QString& _name );
    QString name() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetStatsByName();
    ~TNS__GetStatsByName();

public:
    TNS__GetStatsByName( const TNS__GetStatsByName& );
    TNS__GetStatsByName &operator=( const TNS__GetStatsByName& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__SendAmountDictionaryResponse
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SendAmountDictionaryResponse();
    ~TNS__SendAmountDictionaryResponse();

};

class TNS__GetLinkResponse
{
public:
    void setGetLinkResult( const QString& _getLinkResult );
    QString getLinkResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetLinkResponse();
    ~TNS__GetLinkResponse();

public:
    TNS__GetLinkResponse( const TNS__GetLinkResponse& );
    TNS__GetLinkResponse &operator=( const TNS__GetLinkResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__SetSite
{
public:
    void setUrl( const QString& _url );
    QString url() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SetSite();
    ~TNS__SetSite();

public:
    TNS__SetSite( const TNS__SetSite& );
    TNS__SetSite &operator=( const TNS__SetSite& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__SetSearchPhrase
{
public:
    void setName( const QString& _name );
    QString name() const;
    void setSearchPhrase( const QString& _searchPhrase );
    QString searchPhrase() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__SetSearchPhrase();
    ~TNS__SetSearchPhrase();

public:
    TNS__SetSearchPhrase( const TNS__SetSearchPhrase& );
    TNS__SetSearchPhrase &operator=( const TNS__SetSearchPhrase& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetSitesResponse
{
public:
    void setGetSitesResult( const Q1__ArrayOfKeyValueOfintstring& _getSitesResult );
    Q1__ArrayOfKeyValueOfintstring getSitesResult() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetSitesResponse();
    ~TNS__GetSitesResponse();

public:
    TNS__GetSitesResponse( const TNS__GetSitesResponse& );
    TNS__GetSitesResponse &operator=( const TNS__GetSitesResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetSites
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetSites();
    ~TNS__GetSites();

};

class TNS__GetNames
{
public:
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    TNS__GetNames();
    ~TNS__GetNames();

};

class Q1__ArrayOfstring
{
public:
    void setString( const QStringList& _string );
    QStringList string() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__ArrayOfstring();
    ~Q1__ArrayOfstring();

public:
    Q1__ArrayOfstring( const Q1__ArrayOfstring& );
    Q1__ArrayOfstring &operator=( const Q1__ArrayOfstring& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1
{
public:
    void setKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1( const QList< Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 >& _keyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 );
    QList< Q1__KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 > keyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1() const;
    KDSoapValue serialize( const QString& valueName ) const;
    void deserialize( const KDSoapValue& mainValue );
    Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1();
    ~Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1();

public:
    Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1( const Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1& );
    Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 &operator=( const Q1__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class GetLinkJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetLinkJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetLink& arg0 );
    TNS__GetLink parameters() const;
    TNS__GetLinkResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetLink mParameters;
    TNS__GetLinkResponse mResultParameters;
};

class GetNamesDictionaryJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetNamesDictionaryJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetNamesDictionary& arg0 );
    TNS__GetNamesDictionary parameters() const;
    TNS__GetNamesDictionaryResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetNamesDictionary mParameters;
    TNS__GetNamesDictionaryResponse mResultParameters;
};

class SendLinksJob : public KDSoapJob
{
    Q_OBJECT

public:
    SendLinksJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__SendLinks& arg0 );
    TNS__SendLinks parameters() const;
    TNS__SendLinksResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__SendLinks mParameters;
    TNS__SendLinksResponse mResultParameters;
};

class SendAmountDictionaryJob : public KDSoapJob
{
    Q_OBJECT

public:
    SendAmountDictionaryJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__SendAmountDictionary& arg0 );
    TNS__SendAmountDictionary parameters() const;
    TNS__SendAmountDictionaryResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__SendAmountDictionary mParameters;
    TNS__SendAmountDictionaryResponse mResultParameters;
};

class GetStatsJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetStatsJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetStats& arg0 );
    TNS__GetStats parameters() const;
    TNS__GetStatsResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetStats mParameters;
    TNS__GetStatsResponse mResultParameters;
};

class GetDailyStatsJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetDailyStatsJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetDailyStats& arg0 );
    TNS__GetDailyStats parameters() const;
    TNS__GetDailyStatsResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetDailyStats mParameters;
    TNS__GetDailyStatsResponse mResultParameters;
};

class GetStatsByNameJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetStatsByNameJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetStatsByName& arg0 );
    TNS__GetStatsByName parameters() const;
    TNS__GetStatsByNameResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetStatsByName mParameters;
    TNS__GetStatsByNameResponse mResultParameters;
};

class GetNamesJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetNamesJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetNames& arg0 );
    TNS__GetNames parameters() const;
    TNS__GetNamesResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetNames mParameters;
    TNS__GetNamesResponse mResultParameters;
};

class GetSitesJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetSitesJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetSites& arg0 );
    TNS__GetSites parameters() const;
    TNS__GetSitesResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetSites mParameters;
    TNS__GetSitesResponse mResultParameters;
};

class GetPagesJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetPagesJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetPages& arg0 );
    TNS__GetPages parameters() const;
    TNS__GetPagesResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetPages mParameters;
    TNS__GetPagesResponse mResultParameters;
};

class GetSearchPhrasesJob : public KDSoapJob
{
    Q_OBJECT

public:
    GetSearchPhrasesJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__GetSearchPhrases& arg0 );
    TNS__GetSearchPhrases parameters() const;
    TNS__GetSearchPhrasesResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__GetSearchPhrases mParameters;
    TNS__GetSearchPhrasesResponse mResultParameters;
};

class SetSiteJob : public KDSoapJob
{
    Q_OBJECT

public:
    SetSiteJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__SetSite& arg0 );
    TNS__SetSite parameters() const;
    TNS__SetSiteResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__SetSite mParameters;
    TNS__SetSiteResponse mResultParameters;
};

class SetNameJob : public KDSoapJob
{
    Q_OBJECT

public:
    SetNameJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__SetName& arg0 );
    TNS__SetName parameters() const;
    TNS__SetNameResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__SetName mParameters;
    TNS__SetNameResponse mResultParameters;
};

class SetSearchPhraseJob : public KDSoapJob
{
    Q_OBJECT

public:
    SetSearchPhraseJob( Service* service, QObject* _parent = 0 );
    void setParameters( const TNS__SetSearchPhrase& arg0 );
    TNS__SetSearchPhrase parameters() const;
    TNS__SetSearchPhraseResponse resultParameters() const;

protected:
    void doStart();

private Q_SLOTS:
    void slotFinished( KDSoapPendingCallWatcher* watcher );

private:
    Service *mService;
    TNS__SetSearchPhrase mParameters;
    TNS__SetSearchPhraseResponse mResultParameters;
};

class Service : public QObject
{
    Q_OBJECT

public:
    Service( QObject* _parent = 0 );
    ~Service();
    /**
        Asks Qt to ignore ssl errors in https requests. Use this for testing
        only!
     */
    void ignoreSslErrors();
    /**
        Overwrite the end point defined in the .wsdl file, with another
        http/https URL.
     */
    void setEndPoint( const QString& endPoint );
    /**
        Overwrite the soap version defined in the .wsdl file, with another
        version.
        version can be KDSoapClientInterface::SOAP1_1 or
        KDSoapClientInterface::SOAP1_2
     */
    void setSoapVersion( KDSoapClientInterface::SoapVersion soapVersion );
    /**
        Return the error from the last blocking call.
        Empty if no error.
     */
    QString lastError() const;
    /**
        Returns the underlying KDSoapClientInterface instance, which allows to
        access setCookieJar, lastResponseHeaders, etc.
     */
    const KDSoapClientInterface *clientInterface() const;
    KDSoapClientInterface *clientInterface();
    /**
        Blocking call to GetLink.
        Not recommended in a GUI thread.
     */
    TNS__GetLinkResponse getLink( const TNS__GetLink& parameters = TNS__GetLink() );
    /**
        Asynchronous call to GetLink.
        Remember to connect to getLinkDone and getLinkError.
     */
    void asyncGetLink( const TNS__GetLink& parameters = TNS__GetLink() );
    /**
        Blocking call to GetNamesDictionary.
        Not recommended in a GUI thread.
     */
    TNS__GetNamesDictionaryResponse getNamesDictionary( const TNS__GetNamesDictionary& parameters = TNS__GetNamesDictionary() );
    /**
        Asynchronous call to GetNamesDictionary.
        Remember to connect to getNamesDictionaryDone and
        getNamesDictionaryError.
     */
    void asyncGetNamesDictionary( const TNS__GetNamesDictionary& parameters = TNS__GetNamesDictionary() );
    /**
        Blocking call to SendLinks.
        Not recommended in a GUI thread.
     */
    TNS__SendLinksResponse sendLinks( const TNS__SendLinks& parameters );
    /**
        Asynchronous call to SendLinks.
        Remember to connect to sendLinksDone and sendLinksError.
     */
    void asyncSendLinks( const TNS__SendLinks& parameters );
    /**
        Blocking call to SendAmountDictionary.
        Not recommended in a GUI thread.
     */
    TNS__SendAmountDictionaryResponse sendAmountDictionary( const TNS__SendAmountDictionary& parameters );
    /**
        Asynchronous call to SendAmountDictionary.
        Remember to connect to sendAmountDictionaryDone and
        sendAmountDictionaryError.
     */
    void asyncSendAmountDictionary( const TNS__SendAmountDictionary& parameters );
    /**
        Blocking call to GetStats.
        Not recommended in a GUI thread.
     */
    TNS__GetStatsResponse getStats( const TNS__GetStats& parameters = TNS__GetStats() );
    /**
        Asynchronous call to GetStats.
        Remember to connect to getStatsDone and getStatsError.
     */
    void asyncGetStats( const TNS__GetStats& parameters = TNS__GetStats() );
    /**
        Blocking call to GetDailyStats.
        Not recommended in a GUI thread.
     */
    TNS__GetDailyStatsResponse getDailyStats( const TNS__GetDailyStats& parameters = TNS__GetDailyStats() );
    /**
        Asynchronous call to GetDailyStats.
        Remember to connect to getDailyStatsDone and getDailyStatsError.
     */
    void asyncGetDailyStats( const TNS__GetDailyStats& parameters = TNS__GetDailyStats() );
    /**
        Blocking call to GetStatsByName.
        Not recommended in a GUI thread.
     */
    TNS__GetStatsByNameResponse getStatsByName( const TNS__GetStatsByName& parameters );
    /**
        Asynchronous call to GetStatsByName.
        Remember to connect to getStatsByNameDone and getStatsByNameError.
     */
    void asyncGetStatsByName( const TNS__GetStatsByName& parameters );
    /**
        Blocking call to GetNames.
        Not recommended in a GUI thread.
     */
    TNS__GetNamesResponse getNames( const TNS__GetNames& parameters = TNS__GetNames() );
    /**
        Asynchronous call to GetNames.
        Remember to connect to getNamesDone and getNamesError.
     */
    void asyncGetNames( const TNS__GetNames& parameters = TNS__GetNames() );
    /**
        Blocking call to GetSites.
        Not recommended in a GUI thread.
     */
    TNS__GetSitesResponse getSites( const TNS__GetSites& parameters = TNS__GetSites() );
    /**
        Asynchronous call to GetSites.
        Remember to connect to getSitesDone and getSitesError.
     */
    void asyncGetSites( const TNS__GetSites& parameters = TNS__GetSites() );
    /**
        Blocking call to GetPages.
        Not recommended in a GUI thread.
     */
    TNS__GetPagesResponse getPages( const TNS__GetPages& parameters = TNS__GetPages() );
    /**
        Asynchronous call to GetPages.
        Remember to connect to getPagesDone and getPagesError.
     */
    void asyncGetPages( const TNS__GetPages& parameters = TNS__GetPages() );
    /**
        Blocking call to GetSearchPhrases.
        Not recommended in a GUI thread.
     */
    TNS__GetSearchPhrasesResponse getSearchPhrases( const TNS__GetSearchPhrases& parameters = TNS__GetSearchPhrases() );
    /**
        Asynchronous call to GetSearchPhrases.
        Remember to connect to getSearchPhrasesDone and getSearchPhrasesError.
     */
    void asyncGetSearchPhrases( const TNS__GetSearchPhrases& parameters = TNS__GetSearchPhrases() );
    /**
        Blocking call to SetSite.
        Not recommended in a GUI thread.
     */
    TNS__SetSiteResponse setSite( const TNS__SetSite& parameters );
    /**
        Asynchronous call to SetSite.
        Remember to connect to setSiteDone and setSiteError.
     */
    void asyncSetSite( const TNS__SetSite& parameters );
    /**
        Blocking call to SetName.
        Not recommended in a GUI thread.
     */
    TNS__SetNameResponse setName( const TNS__SetName& parameters );
    /**
        Asynchronous call to SetName.
        Remember to connect to setNameDone and setNameError.
     */
    void asyncSetName( const TNS__SetName& parameters );
    /**
        Blocking call to SetSearchPhrase.
        Not recommended in a GUI thread.
     */
    TNS__SetSearchPhraseResponse setSearchPhrase( const TNS__SetSearchPhrase& parameters );
    /**
        Asynchronous call to SetSearchPhrase.
        Remember to connect to setSearchPhraseDone and setSearchPhraseError.
     */
    void asyncSetSearchPhrase( const TNS__SetSearchPhrase& parameters );

Q_SIGNALS:
    /**
        This signal is emitted whenever a SOAP call failed, for a central
        processing of all SOAP errors.
        method is the name of the method (or operation) that returned the
        fault, for instance "addContact".
     */
    void soapError( const QString& method, const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getLink() succeeded.
     */
    void getLinkDone( const TNS__GetLinkResponse& parameters );
    /**
        This signal is emitted whenever the call to getLink() failed.
     */
    void getLinkError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getNamesDictionary()
        succeeded.
     */
    void getNamesDictionaryDone( const TNS__GetNamesDictionaryResponse& parameters );
    /**
        This signal is emitted whenever the call to getNamesDictionary()
        failed.
     */
    void getNamesDictionaryError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to sendLinks() succeeded.
     */
    void sendLinksDone( const TNS__SendLinksResponse& parameters );
    /**
        This signal is emitted whenever the call to sendLinks() failed.
     */
    void sendLinksError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to sendAmountDictionary()
        succeeded.
     */
    void sendAmountDictionaryDone( const TNS__SendAmountDictionaryResponse& parameters );
    /**
        This signal is emitted whenever the call to sendAmountDictionary()
        failed.
     */
    void sendAmountDictionaryError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getStats() succeeded.
     */
    void getStatsDone( const TNS__GetStatsResponse& parameters );
    /**
        This signal is emitted whenever the call to getStats() failed.
     */
    void getStatsError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getDailyStats() succeeded.
     */
    void getDailyStatsDone( const TNS__GetDailyStatsResponse& parameters );
    /**
        This signal is emitted whenever the call to getDailyStats() failed.
     */
    void getDailyStatsError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getStatsByName() succeeded.
     */
    void getStatsByNameDone( const TNS__GetStatsByNameResponse& parameters );
    /**
        This signal is emitted whenever the call to getStatsByName() failed.
     */
    void getStatsByNameError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getNames() succeeded.
     */
    void getNamesDone( const TNS__GetNamesResponse& parameters );
    /**
        This signal is emitted whenever the call to getNames() failed.
     */
    void getNamesError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getSites() succeeded.
     */
    void getSitesDone( const TNS__GetSitesResponse& parameters );
    /**
        This signal is emitted whenever the call to getSites() failed.
     */
    void getSitesError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getPages() succeeded.
     */
    void getPagesDone( const TNS__GetPagesResponse& parameters );
    /**
        This signal is emitted whenever the call to getPages() failed.
     */
    void getPagesError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getSearchPhrases()
        succeeded.
     */
    void getSearchPhrasesDone( const TNS__GetSearchPhrasesResponse& parameters );
    /**
        This signal is emitted whenever the call to getSearchPhrases() failed.
     */
    void getSearchPhrasesError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to setSite() succeeded.
     */
    void setSiteDone( const TNS__SetSiteResponse& parameters );
    /**
        This signal is emitted whenever the call to setSite() failed.
     */
    void setSiteError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to setName() succeeded.
     */
    void setNameDone( const TNS__SetNameResponse& parameters );
    /**
        This signal is emitted whenever the call to setName() failed.
     */
    void setNameError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to setSearchPhrase()
        succeeded.
     */
    void setSearchPhraseDone( const TNS__SetSearchPhraseResponse& parameters );
    /**
        This signal is emitted whenever the call to setSearchPhrase() failed.
     */
    void setSearchPhraseError( const KDSoapMessage& fault );

private Q_SLOTS:
    void _kd_slotGetLinkFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetNamesDictionaryFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotSendLinksFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotSendAmountDictionaryFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetStatsFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetDailyStatsFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetStatsByNameFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetNamesFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetSitesFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetPagesFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetSearchPhrasesFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotSetSiteFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotSetNameFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotSetSearchPhraseFinished( KDSoapPendingCallWatcher* watcher );

private:
    class PrivateDPtr;
    PrivateDPtr *d_ptr;
};

#endif


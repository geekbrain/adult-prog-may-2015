/* soapBasicHttpBinding_USCOREIServiceProxy.cpp
   Generated by gSOAP 2.8.22 from wssoap.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapBasicHttpBinding_USCOREIServiceProxy.h"

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	BasicHttpBinding_USCOREIServiceProxy_init(_soap->imode, _soap->omode);
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(const char *url)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(iomode, iomode);
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(iomode, iomode);
	soap_endpoint = url;
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(imode, omode);
}

BasicHttpBinding_USCOREIServiceProxy::~BasicHttpBinding_USCOREIServiceProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://schemas.datacontract.org/2004/07/WsSoap", NULL, NULL},
	{"arr", "http://schemas.microsoft.com/2003/10/Serialization/Arrays", NULL, NULL},
	{"tempuri", "http://tempuri.org/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void BasicHttpBinding_USCOREIServiceProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void BasicHttpBinding_USCOREIServiceProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	BasicHttpBinding_USCOREIServiceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void BasicHttpBinding_USCOREIServiceProxy::soap_noheader()
{	this->soap->header = NULL;
}

const SOAP_ENV__Header *BasicHttpBinding_USCOREIServiceProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *BasicHttpBinding_USCOREIServiceProxy::soap_fault()
{	return this->soap->fault;
}

const char *BasicHttpBinding_USCOREIServiceProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *BasicHttpBinding_USCOREIServiceProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int BasicHttpBinding_USCOREIServiceProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int BasicHttpBinding_USCOREIServiceProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void BasicHttpBinding_USCOREIServiceProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void BasicHttpBinding_USCOREIServiceProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *BasicHttpBinding_USCOREIServiceProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int BasicHttpBinding_USCOREIServiceProxy::GetLink(const char *endpoint, const char *soap_action, _tempuri__GetLink *tempuri__GetLink, _tempuri__GetLinkResponse &tempuri__GetLinkResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetLink soap_tmp___tempuri__GetLink;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetLink";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetLink.tempuri__GetLink = tempuri__GetLink;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetLink(soap, &soap_tmp___tempuri__GetLink);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetLink(soap, &soap_tmp___tempuri__GetLink, "-tempuri:GetLink", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetLink(soap, &soap_tmp___tempuri__GetLink, "-tempuri:GetLink", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetLinkResponse)
		return soap_closesock(soap);
	tempuri__GetLinkResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetLinkResponse.soap_get(soap, "tempuri:GetLinkResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetNamesDictionary(const char *endpoint, const char *soap_action, _tempuri__GetNamesDictionary *tempuri__GetNamesDictionary, _tempuri__GetNamesDictionaryResponse &tempuri__GetNamesDictionaryResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetNamesDictionary soap_tmp___tempuri__GetNamesDictionary;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetNamesDictionary";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetNamesDictionary.tempuri__GetNamesDictionary = tempuri__GetNamesDictionary;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetNamesDictionary(soap, &soap_tmp___tempuri__GetNamesDictionary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetNamesDictionary(soap, &soap_tmp___tempuri__GetNamesDictionary, "-tempuri:GetNamesDictionary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetNamesDictionary(soap, &soap_tmp___tempuri__GetNamesDictionary, "-tempuri:GetNamesDictionary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetNamesDictionaryResponse)
		return soap_closesock(soap);
	tempuri__GetNamesDictionaryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetNamesDictionaryResponse.soap_get(soap, "tempuri:GetNamesDictionaryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SendLinks(const char *endpoint, const char *soap_action, _tempuri__SendLinks *tempuri__SendLinks, _tempuri__SendLinksResponse &tempuri__SendLinksResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__SendLinks soap_tmp___tempuri__SendLinks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SendLinks";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__SendLinks.tempuri__SendLinks = tempuri__SendLinks;
	soap_serializeheader(soap);
	soap_serialize___tempuri__SendLinks(soap, &soap_tmp___tempuri__SendLinks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__SendLinks(soap, &soap_tmp___tempuri__SendLinks, "-tempuri:SendLinks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__SendLinks(soap, &soap_tmp___tempuri__SendLinks, "-tempuri:SendLinks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__SendLinksResponse)
		return soap_closesock(soap);
	tempuri__SendLinksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__SendLinksResponse.soap_get(soap, "tempuri:SendLinksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SendAmountDictionary(const char *endpoint, const char *soap_action, _tempuri__SendAmountDictionary *tempuri__SendAmountDictionary, _tempuri__SendAmountDictionaryResponse &tempuri__SendAmountDictionaryResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__SendAmountDictionary soap_tmp___tempuri__SendAmountDictionary;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SendAmountDictionary";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__SendAmountDictionary.tempuri__SendAmountDictionary = tempuri__SendAmountDictionary;
	soap_serializeheader(soap);
	soap_serialize___tempuri__SendAmountDictionary(soap, &soap_tmp___tempuri__SendAmountDictionary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__SendAmountDictionary(soap, &soap_tmp___tempuri__SendAmountDictionary, "-tempuri:SendAmountDictionary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__SendAmountDictionary(soap, &soap_tmp___tempuri__SendAmountDictionary, "-tempuri:SendAmountDictionary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__SendAmountDictionaryResponse)
		return soap_closesock(soap);
	tempuri__SendAmountDictionaryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__SendAmountDictionaryResponse.soap_get(soap, "tempuri:SendAmountDictionaryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetStats(const char *endpoint, const char *soap_action, _tempuri__GetStats *tempuri__GetStats, _tempuri__GetStatsResponse &tempuri__GetStatsResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetStats soap_tmp___tempuri__GetStats;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetStats";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetStats.tempuri__GetStats = tempuri__GetStats;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetStats(soap, &soap_tmp___tempuri__GetStats);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetStats(soap, &soap_tmp___tempuri__GetStats, "-tempuri:GetStats", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetStats(soap, &soap_tmp___tempuri__GetStats, "-tempuri:GetStats", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetStatsResponse)
		return soap_closesock(soap);
	tempuri__GetStatsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetStatsResponse.soap_get(soap, "tempuri:GetStatsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetDailyStats(const char *endpoint, const char *soap_action, _tempuri__GetDailyStats *tempuri__GetDailyStats, _tempuri__GetDailyStatsResponse &tempuri__GetDailyStatsResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetDailyStats soap_tmp___tempuri__GetDailyStats;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetDailyStats";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetDailyStats.tempuri__GetDailyStats = tempuri__GetDailyStats;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetDailyStats(soap, &soap_tmp___tempuri__GetDailyStats);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetDailyStats(soap, &soap_tmp___tempuri__GetDailyStats, "-tempuri:GetDailyStats", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetDailyStats(soap, &soap_tmp___tempuri__GetDailyStats, "-tempuri:GetDailyStats", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetDailyStatsResponse)
		return soap_closesock(soap);
	tempuri__GetDailyStatsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetDailyStatsResponse.soap_get(soap, "tempuri:GetDailyStatsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetStatsByName(const char *endpoint, const char *soap_action, _tempuri__GetStatsByName *tempuri__GetStatsByName, _tempuri__GetStatsByNameResponse &tempuri__GetStatsByNameResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetStatsByName soap_tmp___tempuri__GetStatsByName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetStatsByName";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetStatsByName.tempuri__GetStatsByName = tempuri__GetStatsByName;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetStatsByName(soap, &soap_tmp___tempuri__GetStatsByName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetStatsByName(soap, &soap_tmp___tempuri__GetStatsByName, "-tempuri:GetStatsByName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetStatsByName(soap, &soap_tmp___tempuri__GetStatsByName, "-tempuri:GetStatsByName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetStatsByNameResponse)
		return soap_closesock(soap);
	tempuri__GetStatsByNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetStatsByNameResponse.soap_get(soap, "tempuri:GetStatsByNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetNames(const char *endpoint, const char *soap_action, _tempuri__GetNames *tempuri__GetNames, _tempuri__GetNamesResponse &tempuri__GetNamesResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetNames soap_tmp___tempuri__GetNames;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetNames";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetNames.tempuri__GetNames = tempuri__GetNames;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetNames(soap, &soap_tmp___tempuri__GetNames);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetNames(soap, &soap_tmp___tempuri__GetNames, "-tempuri:GetNames", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetNames(soap, &soap_tmp___tempuri__GetNames, "-tempuri:GetNames", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetNamesResponse)
		return soap_closesock(soap);
	tempuri__GetNamesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetNamesResponse.soap_get(soap, "tempuri:GetNamesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetSites(const char *endpoint, const char *soap_action, _tempuri__GetSites *tempuri__GetSites, _tempuri__GetSitesResponse &tempuri__GetSitesResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetSites soap_tmp___tempuri__GetSites;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetSites";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetSites.tempuri__GetSites = tempuri__GetSites;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetSites(soap, &soap_tmp___tempuri__GetSites);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetSites(soap, &soap_tmp___tempuri__GetSites, "-tempuri:GetSites", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetSites(soap, &soap_tmp___tempuri__GetSites, "-tempuri:GetSites", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetSitesResponse)
		return soap_closesock(soap);
	tempuri__GetSitesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetSitesResponse.soap_get(soap, "tempuri:GetSitesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetPages(const char *endpoint, const char *soap_action, _tempuri__GetPages *tempuri__GetPages, _tempuri__GetPagesResponse &tempuri__GetPagesResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetPages soap_tmp___tempuri__GetPages;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetPages";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetPages.tempuri__GetPages = tempuri__GetPages;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetPages(soap, &soap_tmp___tempuri__GetPages);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetPages(soap, &soap_tmp___tempuri__GetPages, "-tempuri:GetPages", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetPages(soap, &soap_tmp___tempuri__GetPages, "-tempuri:GetPages", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetPagesResponse)
		return soap_closesock(soap);
	tempuri__GetPagesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetPagesResponse.soap_get(soap, "tempuri:GetPagesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetSearchPhrases(const char *endpoint, const char *soap_action, _tempuri__GetSearchPhrases *tempuri__GetSearchPhrases, _tempuri__GetSearchPhrasesResponse &tempuri__GetSearchPhrasesResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__GetSearchPhrases soap_tmp___tempuri__GetSearchPhrases;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetSearchPhrases";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__GetSearchPhrases.tempuri__GetSearchPhrases = tempuri__GetSearchPhrases;
	soap_serializeheader(soap);
	soap_serialize___tempuri__GetSearchPhrases(soap, &soap_tmp___tempuri__GetSearchPhrases);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__GetSearchPhrases(soap, &soap_tmp___tempuri__GetSearchPhrases, "-tempuri:GetSearchPhrases", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__GetSearchPhrases(soap, &soap_tmp___tempuri__GetSearchPhrases, "-tempuri:GetSearchPhrases", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__GetSearchPhrasesResponse)
		return soap_closesock(soap);
	tempuri__GetSearchPhrasesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__GetSearchPhrasesResponse.soap_get(soap, "tempuri:GetSearchPhrasesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SetSite(const char *endpoint, const char *soap_action, _tempuri__SetSite *tempuri__SetSite, _tempuri__SetSiteResponse &tempuri__SetSiteResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__SetSite soap_tmp___tempuri__SetSite;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SetSite";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__SetSite.tempuri__SetSite = tempuri__SetSite;
	soap_serializeheader(soap);
	soap_serialize___tempuri__SetSite(soap, &soap_tmp___tempuri__SetSite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__SetSite(soap, &soap_tmp___tempuri__SetSite, "-tempuri:SetSite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__SetSite(soap, &soap_tmp___tempuri__SetSite, "-tempuri:SetSite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__SetSiteResponse)
		return soap_closesock(soap);
	tempuri__SetSiteResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__SetSiteResponse.soap_get(soap, "tempuri:SetSiteResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SetName(const char *endpoint, const char *soap_action, _tempuri__SetName *tempuri__SetName, _tempuri__SetNameResponse &tempuri__SetNameResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__SetName soap_tmp___tempuri__SetName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SetName";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__SetName.tempuri__SetName = tempuri__SetName;
	soap_serializeheader(soap);
	soap_serialize___tempuri__SetName(soap, &soap_tmp___tempuri__SetName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__SetName(soap, &soap_tmp___tempuri__SetName, "-tempuri:SetName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__SetName(soap, &soap_tmp___tempuri__SetName, "-tempuri:SetName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__SetNameResponse)
		return soap_closesock(soap);
	tempuri__SetNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__SetNameResponse.soap_get(soap, "tempuri:SetNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SetSearchPhrase(const char *endpoint, const char *soap_action, _tempuri__SetSearchPhrase *tempuri__SetSearchPhrase, _tempuri__SetSearchPhraseResponse &tempuri__SetSearchPhraseResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__SetSearchPhrase soap_tmp___tempuri__SetSearchPhrase;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SetSearchPhrase";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__SetSearchPhrase.tempuri__SetSearchPhrase = tempuri__SetSearchPhrase;
	soap_serializeheader(soap);
	soap_serialize___tempuri__SetSearchPhrase(soap, &soap_tmp___tempuri__SetSearchPhrase);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__SetSearchPhrase(soap, &soap_tmp___tempuri__SetSearchPhrase, "-tempuri:SetSearchPhrase", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__SetSearchPhrase(soap, &soap_tmp___tempuri__SetSearchPhrase, "-tempuri:SetSearchPhrase", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__SetSearchPhraseResponse)
		return soap_closesock(soap);
	tempuri__SetSearchPhraseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__SetSearchPhraseResponse.soap_get(soap, "tempuri:SetSearchPhraseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */

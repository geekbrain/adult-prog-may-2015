/* soapBasicHttpBinding_USCOREIServiceProxy.cpp
   Generated by gSOAP 2.8.22 from wssoap.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapBasicHttpBinding_USCOREIServiceProxy.h"

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	BasicHttpBinding_USCOREIServiceProxy_init(_soap->imode, _soap->omode);
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(const char *url)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(iomode, iomode);
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(iomode, iomode);
	soap_endpoint = url;
}

BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIServiceProxy_init(imode, omode);
}

BasicHttpBinding_USCOREIServiceProxy::~BasicHttpBinding_USCOREIServiceProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void BasicHttpBinding_USCOREIServiceProxy::BasicHttpBinding_USCOREIServiceProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns5", "http://schemas.datacontract.org/2004/07/WsSoap", NULL, NULL},
	{"ns3", "http://schemas.microsoft.com/2003/10/Serialization/", NULL, NULL},
	{"ns4", "http://schemas.microsoft.com/2003/10/Serialization/Arrays", NULL, NULL},
	{"ns1", "http://tempuri.org/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void BasicHttpBinding_USCOREIServiceProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void BasicHttpBinding_USCOREIServiceProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	BasicHttpBinding_USCOREIServiceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void BasicHttpBinding_USCOREIServiceProxy::soap_noheader()
{	this->soap->header = NULL;
}

const SOAP_ENV__Header *BasicHttpBinding_USCOREIServiceProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *BasicHttpBinding_USCOREIServiceProxy::soap_fault()
{	return this->soap->fault;
}

const char *BasicHttpBinding_USCOREIServiceProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *BasicHttpBinding_USCOREIServiceProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int BasicHttpBinding_USCOREIServiceProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int BasicHttpBinding_USCOREIServiceProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void BasicHttpBinding_USCOREIServiceProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void BasicHttpBinding_USCOREIServiceProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *BasicHttpBinding_USCOREIServiceProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int BasicHttpBinding_USCOREIServiceProxy::GetLink(const char *endpoint, const char *soap_action, _ns1__GetLink *ns1__GetLink, _ns1__GetLinkResponse &ns1__GetLinkResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetLink soap_tmp___ns1__GetLink;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetLink";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLink.ns1__GetLink = ns1__GetLink;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLink(soap, &soap_tmp___ns1__GetLink);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLink(soap, &soap_tmp___ns1__GetLink, "-ns1:GetLink", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLink(soap, &soap_tmp___ns1__GetLink, "-ns1:GetLink", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLinkResponse)
		return soap_closesock(soap);
	ns1__GetLinkResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLinkResponse.soap_get(soap, "ns1:GetLinkResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetNamesDictionary(const char *endpoint, const char *soap_action, _ns1__GetNamesDictionary *ns1__GetNamesDictionary, _ns1__GetNamesDictionaryResponse &ns1__GetNamesDictionaryResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetNamesDictionary soap_tmp___ns1__GetNamesDictionary;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetNamesDictionary";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetNamesDictionary.ns1__GetNamesDictionary = ns1__GetNamesDictionary;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetNamesDictionary(soap, &soap_tmp___ns1__GetNamesDictionary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetNamesDictionary(soap, &soap_tmp___ns1__GetNamesDictionary, "-ns1:GetNamesDictionary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetNamesDictionary(soap, &soap_tmp___ns1__GetNamesDictionary, "-ns1:GetNamesDictionary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetNamesDictionaryResponse)
		return soap_closesock(soap);
	ns1__GetNamesDictionaryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetNamesDictionaryResponse.soap_get(soap, "ns1:GetNamesDictionaryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SendLinks(const char *endpoint, const char *soap_action, _ns1__SendLinks *ns1__SendLinks, _ns1__SendLinksResponse &ns1__SendLinksResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SendLinks soap_tmp___ns1__SendLinks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SendLinks";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SendLinks.ns1__SendLinks = ns1__SendLinks;
	soap_serializeheader(soap);
	soap_serialize___ns1__SendLinks(soap, &soap_tmp___ns1__SendLinks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SendLinks(soap, &soap_tmp___ns1__SendLinks, "-ns1:SendLinks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SendLinks(soap, &soap_tmp___ns1__SendLinks, "-ns1:SendLinks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SendLinksResponse)
		return soap_closesock(soap);
	ns1__SendLinksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendLinksResponse.soap_get(soap, "ns1:SendLinksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SendAmountDictionary(const char *endpoint, const char *soap_action, _ns1__SendAmountDictionary *ns1__SendAmountDictionary, _ns1__SendAmountDictionaryResponse &ns1__SendAmountDictionaryResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SendAmountDictionary soap_tmp___ns1__SendAmountDictionary;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SendAmountDictionary";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SendAmountDictionary.ns1__SendAmountDictionary = ns1__SendAmountDictionary;
	soap_serializeheader(soap);
	soap_serialize___ns1__SendAmountDictionary(soap, &soap_tmp___ns1__SendAmountDictionary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SendAmountDictionary(soap, &soap_tmp___ns1__SendAmountDictionary, "-ns1:SendAmountDictionary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SendAmountDictionary(soap, &soap_tmp___ns1__SendAmountDictionary, "-ns1:SendAmountDictionary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SendAmountDictionaryResponse)
		return soap_closesock(soap);
	ns1__SendAmountDictionaryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendAmountDictionaryResponse.soap_get(soap, "ns1:SendAmountDictionaryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetStats(const char *endpoint, const char *soap_action, _ns1__GetStats *ns1__GetStats, _ns1__GetStatsResponse &ns1__GetStatsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetStats soap_tmp___ns1__GetStats;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetStats";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetStats.ns1__GetStats = ns1__GetStats;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetStats(soap, &soap_tmp___ns1__GetStats);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetStats(soap, &soap_tmp___ns1__GetStats, "-ns1:GetStats", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetStats(soap, &soap_tmp___ns1__GetStats, "-ns1:GetStats", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetStatsResponse)
		return soap_closesock(soap);
	ns1__GetStatsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetStatsResponse.soap_get(soap, "ns1:GetStatsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetDailyStats(const char *endpoint, const char *soap_action, _ns1__GetDailyStats *ns1__GetDailyStats, _ns1__GetDailyStatsResponse &ns1__GetDailyStatsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDailyStats soap_tmp___ns1__GetDailyStats;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetDailyStats";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetDailyStats.ns1__GetDailyStats = ns1__GetDailyStats;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDailyStats(soap, &soap_tmp___ns1__GetDailyStats);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDailyStats(soap, &soap_tmp___ns1__GetDailyStats, "-ns1:GetDailyStats", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDailyStats(soap, &soap_tmp___ns1__GetDailyStats, "-ns1:GetDailyStats", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetDailyStatsResponse)
		return soap_closesock(soap);
	ns1__GetDailyStatsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDailyStatsResponse.soap_get(soap, "ns1:GetDailyStatsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetStatsByName(const char *endpoint, const char *soap_action, _ns1__GetStatsByName *ns1__GetStatsByName, _ns1__GetStatsByNameResponse &ns1__GetStatsByNameResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetStatsByName soap_tmp___ns1__GetStatsByName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetStatsByName";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetStatsByName.ns1__GetStatsByName = ns1__GetStatsByName;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetStatsByName(soap, &soap_tmp___ns1__GetStatsByName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetStatsByName(soap, &soap_tmp___ns1__GetStatsByName, "-ns1:GetStatsByName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetStatsByName(soap, &soap_tmp___ns1__GetStatsByName, "-ns1:GetStatsByName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetStatsByNameResponse)
		return soap_closesock(soap);
	ns1__GetStatsByNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetStatsByNameResponse.soap_get(soap, "ns1:GetStatsByNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetNames(const char *endpoint, const char *soap_action, _ns1__GetNames *ns1__GetNames, _ns1__GetNamesResponse &ns1__GetNamesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetNames soap_tmp___ns1__GetNames;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetNames";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetNames.ns1__GetNames = ns1__GetNames;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetNames(soap, &soap_tmp___ns1__GetNames);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetNames(soap, &soap_tmp___ns1__GetNames, "-ns1:GetNames", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetNames(soap, &soap_tmp___ns1__GetNames, "-ns1:GetNames", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetNamesResponse)
		return soap_closesock(soap);
	ns1__GetNamesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetNamesResponse.soap_get(soap, "ns1:GetNamesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetSites(const char *endpoint, const char *soap_action, _ns1__GetSites *ns1__GetSites, _ns1__GetSitesResponse &ns1__GetSitesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetSites soap_tmp___ns1__GetSites;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetSites";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSites.ns1__GetSites = ns1__GetSites;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSites(soap, &soap_tmp___ns1__GetSites);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSites(soap, &soap_tmp___ns1__GetSites, "-ns1:GetSites", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSites(soap, &soap_tmp___ns1__GetSites, "-ns1:GetSites", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetSitesResponse)
		return soap_closesock(soap);
	ns1__GetSitesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSitesResponse.soap_get(soap, "ns1:GetSitesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetPages(const char *endpoint, const char *soap_action, _ns1__GetPages *ns1__GetPages, _ns1__GetPagesResponse &ns1__GetPagesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetPages soap_tmp___ns1__GetPages;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetPages";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetPages.ns1__GetPages = ns1__GetPages;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPages(soap, &soap_tmp___ns1__GetPages);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPages(soap, &soap_tmp___ns1__GetPages, "-ns1:GetPages", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPages(soap, &soap_tmp___ns1__GetPages, "-ns1:GetPages", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetPagesResponse)
		return soap_closesock(soap);
	ns1__GetPagesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPagesResponse.soap_get(soap, "ns1:GetPagesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::GetSearchPhrases(const char *endpoint, const char *soap_action, _ns1__GetSearchPhrases *ns1__GetSearchPhrases, _ns1__GetSearchPhrasesResponse &ns1__GetSearchPhrasesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetSearchPhrases soap_tmp___ns1__GetSearchPhrases;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/GetSearchPhrases";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSearchPhrases.ns1__GetSearchPhrases = ns1__GetSearchPhrases;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSearchPhrases(soap, &soap_tmp___ns1__GetSearchPhrases);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSearchPhrases(soap, &soap_tmp___ns1__GetSearchPhrases, "-ns1:GetSearchPhrases", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSearchPhrases(soap, &soap_tmp___ns1__GetSearchPhrases, "-ns1:GetSearchPhrases", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetSearchPhrasesResponse)
		return soap_closesock(soap);
	ns1__GetSearchPhrasesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSearchPhrasesResponse.soap_get(soap, "ns1:GetSearchPhrasesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SetSite(const char *endpoint, const char *soap_action, _ns1__SetSite *ns1__SetSite, _ns1__SetSiteResponse &ns1__SetSiteResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetSite soap_tmp___ns1__SetSite;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SetSite";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetSite.ns1__SetSite = ns1__SetSite;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetSite(soap, &soap_tmp___ns1__SetSite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetSite(soap, &soap_tmp___ns1__SetSite, "-ns1:SetSite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetSite(soap, &soap_tmp___ns1__SetSite, "-ns1:SetSite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SetSiteResponse)
		return soap_closesock(soap);
	ns1__SetSiteResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetSiteResponse.soap_get(soap, "ns1:SetSiteResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SetName(const char *endpoint, const char *soap_action, _ns1__SetName *ns1__SetName, _ns1__SetNameResponse &ns1__SetNameResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetName soap_tmp___ns1__SetName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SetName";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetName.ns1__SetName = ns1__SetName;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetName(soap, &soap_tmp___ns1__SetName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetName(soap, &soap_tmp___ns1__SetName, "-ns1:SetName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetName(soap, &soap_tmp___ns1__SetName, "-ns1:SetName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SetNameResponse)
		return soap_closesock(soap);
	ns1__SetNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetNameResponse.soap_get(soap, "ns1:SetNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIServiceProxy::SetSearchPhrase(const char *endpoint, const char *soap_action, _ns1__SetSearchPhrase *ns1__SetSearchPhrase, _ns1__SetSearchPhraseResponse &ns1__SetSearchPhraseResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetSearchPhrase soap_tmp___ns1__SetSearchPhrase;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.adultprog2015.somee.com/WsSoap.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IService/SetSearchPhrase";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetSearchPhrase.ns1__SetSearchPhrase = ns1__SetSearchPhrase;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetSearchPhrase(soap, &soap_tmp___ns1__SetSearchPhrase);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetSearchPhrase(soap, &soap_tmp___ns1__SetSearchPhrase, "-ns1:SetSearchPhrase", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetSearchPhrase(soap, &soap_tmp___ns1__SetSearchPhrase, "-ns1:SetSearchPhrase", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SetSearchPhraseResponse)
		return soap_closesock(soap);
	ns1__SetSearchPhraseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetSearchPhraseResponse.soap_get(soap, "ns1:SetSearchPhraseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */

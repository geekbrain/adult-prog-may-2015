/* soapStub.h
   Generated by gSOAP 2.8.22 from wssoap.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_Anything	"http://tempuri.org/Imports"
#define SOAP_NAMESPACE_OF_tempuri	"http://tempuri.org/"
#define SOAP_NAMESPACE_OF_arr	"http://schemas.microsoft.com/2003/10/Serialization/Arrays"
#define SOAP_NAMESPACE_OF_ns1	"http://schemas.datacontract.org/2004/07/WsSoap"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20822
# error "GSOAP VERSION 20822 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__tempuri__GetLink
#define SOAP_TYPE__tempuri__GetLink (7)
/* tempuri:GetLink */
class SOAP_CMAC _tempuri__GetLink
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique type id SOAP_TYPE__tempuri__GetLink */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetLink() { _tempuri__GetLink::soap_default(NULL); }
	virtual ~_tempuri__GetLink() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetLinkResponse
#define SOAP_TYPE__tempuri__GetLinkResponse (8)
/* tempuri:GetLinkResponse */
class SOAP_CMAC _tempuri__GetLinkResponse
{
public:
	char *GetLinkResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique type id SOAP_TYPE__tempuri__GetLinkResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetLinkResponse() { _tempuri__GetLinkResponse::soap_default(NULL); }
	virtual ~_tempuri__GetLinkResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetNamesDictionary
#define SOAP_TYPE__tempuri__GetNamesDictionary (9)
/* tempuri:GetNamesDictionary */
class SOAP_CMAC _tempuri__GetNamesDictionary
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique type id SOAP_TYPE__tempuri__GetNamesDictionary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetNamesDictionary() { _tempuri__GetNamesDictionary::soap_default(NULL); }
	virtual ~_tempuri__GetNamesDictionary() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetNamesDictionaryResponse
#define SOAP_TYPE__tempuri__GetNamesDictionaryResponse (10)
/* tempuri:GetNamesDictionaryResponse */
class SOAP_CMAC _tempuri__GetNamesDictionaryResponse
{
public:
	class arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1 *GetNamesDictionaryResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type arr:ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique type id SOAP_TYPE__tempuri__GetNamesDictionaryResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetNamesDictionaryResponse() { _tempuri__GetNamesDictionaryResponse::soap_default(NULL); }
	virtual ~_tempuri__GetNamesDictionaryResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SendLinks
#define SOAP_TYPE__tempuri__SendLinks (11)
/* tempuri:SendLinks */
class SOAP_CMAC _tempuri__SendLinks
{
public:
	class arr__ArrayOfstring *links;	/* optional element of type arr:ArrayOfstring */
	char *url;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique type id SOAP_TYPE__tempuri__SendLinks */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SendLinks() { _tempuri__SendLinks::soap_default(NULL); }
	virtual ~_tempuri__SendLinks() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SendLinksResponse
#define SOAP_TYPE__tempuri__SendLinksResponse (12)
/* tempuri:SendLinksResponse */
class SOAP_CMAC _tempuri__SendLinksResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique type id SOAP_TYPE__tempuri__SendLinksResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SendLinksResponse() { _tempuri__SendLinksResponse::soap_default(NULL); }
	virtual ~_tempuri__SendLinksResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SendAmountDictionary
#define SOAP_TYPE__tempuri__SendAmountDictionary (13)
/* tempuri:SendAmountDictionary */
class SOAP_CMAC _tempuri__SendAmountDictionary
{
public:
	class arr__ArrayOfKeyValueOfstringint *namesAmountDictionary;	/* optional element of type arr:ArrayOfKeyValueOfstringint */
	char *url;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique type id SOAP_TYPE__tempuri__SendAmountDictionary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SendAmountDictionary() { _tempuri__SendAmountDictionary::soap_default(NULL); }
	virtual ~_tempuri__SendAmountDictionary() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SendAmountDictionaryResponse
#define SOAP_TYPE__tempuri__SendAmountDictionaryResponse (14)
/* tempuri:SendAmountDictionaryResponse */
class SOAP_CMAC _tempuri__SendAmountDictionaryResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique type id SOAP_TYPE__tempuri__SendAmountDictionaryResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SendAmountDictionaryResponse() { _tempuri__SendAmountDictionaryResponse::soap_default(NULL); }
	virtual ~_tempuri__SendAmountDictionaryResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetStats
#define SOAP_TYPE__tempuri__GetStats (15)
/* tempuri:GetStats */
class SOAP_CMAC _tempuri__GetStats
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique type id SOAP_TYPE__tempuri__GetStats */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetStats() { _tempuri__GetStats::soap_default(NULL); }
	virtual ~_tempuri__GetStats() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetStatsResponse
#define SOAP_TYPE__tempuri__GetStatsResponse (16)
/* tempuri:GetStatsResponse */
class SOAP_CMAC _tempuri__GetStatsResponse
{
public:
	arr__ArrayOfKeyValueOfstringint *GetStatsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type arr:ArrayOfKeyValueOfstringint */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique type id SOAP_TYPE__tempuri__GetStatsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetStatsResponse() { _tempuri__GetStatsResponse::soap_default(NULL); }
	virtual ~_tempuri__GetStatsResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetDailyStats
#define SOAP_TYPE__tempuri__GetDailyStats (17)
/* tempuri:GetDailyStats */
class SOAP_CMAC _tempuri__GetDailyStats
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique type id SOAP_TYPE__tempuri__GetDailyStats */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetDailyStats() { _tempuri__GetDailyStats::soap_default(NULL); }
	virtual ~_tempuri__GetDailyStats() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetDailyStatsResponse
#define SOAP_TYPE__tempuri__GetDailyStatsResponse (18)
/* tempuri:GetDailyStatsResponse */
class SOAP_CMAC _tempuri__GetDailyStatsResponse
{
public:
	class arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 *GetDailyStatsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type arr:ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique type id SOAP_TYPE__tempuri__GetDailyStatsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetDailyStatsResponse() { _tempuri__GetDailyStatsResponse::soap_default(NULL); }
	virtual ~_tempuri__GetDailyStatsResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetStatsByName
#define SOAP_TYPE__tempuri__GetStatsByName (19)
/* tempuri:GetStatsByName */
class SOAP_CMAC _tempuri__GetStatsByName
{
public:
	char *name;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique type id SOAP_TYPE__tempuri__GetStatsByName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetStatsByName() { _tempuri__GetStatsByName::soap_default(NULL); }
	virtual ~_tempuri__GetStatsByName() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetStatsByNameResponse
#define SOAP_TYPE__tempuri__GetStatsByNameResponse (20)
/* tempuri:GetStatsByNameResponse */
class SOAP_CMAC _tempuri__GetStatsByNameResponse
{
public:
	class arr__ArrayOfKeyValueOfdateTimeint *GetStatsByNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type arr:ArrayOfKeyValueOfdateTimeint */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique type id SOAP_TYPE__tempuri__GetStatsByNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetStatsByNameResponse() { _tempuri__GetStatsByNameResponse::soap_default(NULL); }
	virtual ~_tempuri__GetStatsByNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetNames
#define SOAP_TYPE__tempuri__GetNames (21)
/* tempuri:GetNames */
class SOAP_CMAC _tempuri__GetNames
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique type id SOAP_TYPE__tempuri__GetNames */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetNames() { _tempuri__GetNames::soap_default(NULL); }
	virtual ~_tempuri__GetNames() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetNamesResponse
#define SOAP_TYPE__tempuri__GetNamesResponse (22)
/* tempuri:GetNamesResponse */
class SOAP_CMAC _tempuri__GetNamesResponse
{
public:
	class arr__ArrayOfKeyValueOfintstring *GetNamesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type arr:ArrayOfKeyValueOfintstring */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique type id SOAP_TYPE__tempuri__GetNamesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetNamesResponse() { _tempuri__GetNamesResponse::soap_default(NULL); }
	virtual ~_tempuri__GetNamesResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetSites
#define SOAP_TYPE__tempuri__GetSites (23)
/* tempuri:GetSites */
class SOAP_CMAC _tempuri__GetSites
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique type id SOAP_TYPE__tempuri__GetSites */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetSites() { _tempuri__GetSites::soap_default(NULL); }
	virtual ~_tempuri__GetSites() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetSitesResponse
#define SOAP_TYPE__tempuri__GetSitesResponse (24)
/* tempuri:GetSitesResponse */
class SOAP_CMAC _tempuri__GetSitesResponse
{
public:
	arr__ArrayOfKeyValueOfintstring *GetSitesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type arr:ArrayOfKeyValueOfintstring */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique type id SOAP_TYPE__tempuri__GetSitesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetSitesResponse() { _tempuri__GetSitesResponse::soap_default(NULL); }
	virtual ~_tempuri__GetSitesResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetPages
#define SOAP_TYPE__tempuri__GetPages (25)
/* tempuri:GetPages */
class SOAP_CMAC _tempuri__GetPages
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique type id SOAP_TYPE__tempuri__GetPages */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetPages() { _tempuri__GetPages::soap_default(NULL); }
	virtual ~_tempuri__GetPages() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetPagesResponse
#define SOAP_TYPE__tempuri__GetPagesResponse (26)
/* tempuri:GetPagesResponse */
class SOAP_CMAC _tempuri__GetPagesResponse
{
public:
	class ns1__ArrayOfPage *GetPagesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPage */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique type id SOAP_TYPE__tempuri__GetPagesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetPagesResponse() { _tempuri__GetPagesResponse::soap_default(NULL); }
	virtual ~_tempuri__GetPagesResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetSearchPhrases
#define SOAP_TYPE__tempuri__GetSearchPhrases (27)
/* tempuri:GetSearchPhrases */
class SOAP_CMAC _tempuri__GetSearchPhrases
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique type id SOAP_TYPE__tempuri__GetSearchPhrases */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetSearchPhrases() { _tempuri__GetSearchPhrases::soap_default(NULL); }
	virtual ~_tempuri__GetSearchPhrases() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__GetSearchPhrasesResponse
#define SOAP_TYPE__tempuri__GetSearchPhrasesResponse (28)
/* tempuri:GetSearchPhrasesResponse */
class SOAP_CMAC _tempuri__GetSearchPhrasesResponse
{
public:
	class arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 *GetSearchPhrasesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type arr:ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique type id SOAP_TYPE__tempuri__GetSearchPhrasesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__GetSearchPhrasesResponse() { _tempuri__GetSearchPhrasesResponse::soap_default(NULL); }
	virtual ~_tempuri__GetSearchPhrasesResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SetSite
#define SOAP_TYPE__tempuri__SetSite (29)
/* tempuri:SetSite */
class SOAP_CMAC _tempuri__SetSite
{
public:
	char *url;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique type id SOAP_TYPE__tempuri__SetSite */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SetSite() { _tempuri__SetSite::soap_default(NULL); }
	virtual ~_tempuri__SetSite() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SetSiteResponse
#define SOAP_TYPE__tempuri__SetSiteResponse (30)
/* tempuri:SetSiteResponse */
class SOAP_CMAC _tempuri__SetSiteResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique type id SOAP_TYPE__tempuri__SetSiteResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SetSiteResponse() { _tempuri__SetSiteResponse::soap_default(NULL); }
	virtual ~_tempuri__SetSiteResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SetName
#define SOAP_TYPE__tempuri__SetName (31)
/* tempuri:SetName */
class SOAP_CMAC _tempuri__SetName
{
public:
	char *name;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique type id SOAP_TYPE__tempuri__SetName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SetName() { _tempuri__SetName::soap_default(NULL); }
	virtual ~_tempuri__SetName() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SetNameResponse
#define SOAP_TYPE__tempuri__SetNameResponse (32)
/* tempuri:SetNameResponse */
class SOAP_CMAC _tempuri__SetNameResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique type id SOAP_TYPE__tempuri__SetNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SetNameResponse() { _tempuri__SetNameResponse::soap_default(NULL); }
	virtual ~_tempuri__SetNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SetSearchPhrase
#define SOAP_TYPE__tempuri__SetSearchPhrase (33)
/* tempuri:SetSearchPhrase */
class SOAP_CMAC _tempuri__SetSearchPhrase
{
public:
	char *name;	/* optional element of type xsd:string */
	char *searchPhrase;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique type id SOAP_TYPE__tempuri__SetSearchPhrase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SetSearchPhrase() { _tempuri__SetSearchPhrase::soap_default(NULL); }
	virtual ~_tempuri__SetSearchPhrase() { }
};
#endif

#ifndef SOAP_TYPE__tempuri__SetSearchPhraseResponse
#define SOAP_TYPE__tempuri__SetSearchPhraseResponse (34)
/* tempuri:SetSearchPhraseResponse */
class SOAP_CMAC _tempuri__SetSearchPhraseResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique type id SOAP_TYPE__tempuri__SetSearchPhraseResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _tempuri__SetSearchPhraseResponse() { _tempuri__SetSearchPhraseResponse::soap_default(NULL); }
	virtual ~_tempuri__SetSearchPhraseResponse() { }
};
#endif

#ifndef SOAP_TYPE__arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1_KeyValueOfstringArrayOfstringty7Ep6D1
#define SOAP_TYPE__arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1_KeyValueOfstringArrayOfstringty7Ep6D1 (53)
/* arr:ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1-KeyValueOfstringArrayOfstringty7Ep6D1 */
class SOAP_CMAC _arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1_KeyValueOfstringArrayOfstringty7Ep6D1
{
public:
	char *Key;	/* optional element of type xsd:string */
	arr__ArrayOfstring *Value;	/* optional element of type arr:ArrayOfstring */
public:
	virtual int soap_type() const { return 53; } /* = unique type id SOAP_TYPE__arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1_KeyValueOfstringArrayOfstringty7Ep6D1 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1_KeyValueOfstringArrayOfstringty7Ep6D1() { _arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1_KeyValueOfstringArrayOfstringty7Ep6D1::soap_default(NULL); }
	virtual ~_arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1_KeyValueOfstringArrayOfstringty7Ep6D1() { }
};
#endif

#ifndef SOAP_TYPE_arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1
#define SOAP_TYPE_arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1 (35)
/* arr:ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1 */
class SOAP_CMAC arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1
{
public:
	int __sizeKeyValueOfstringArrayOfstringty7Ep6D1;	/* sequence of elements <KeyValueOfstringArrayOfstringty7Ep6D1> */
	_arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1_KeyValueOfstringArrayOfstringty7Ep6D1 *KeyValueOfstringArrayOfstringty7Ep6D1;	/* optional element of type arr:ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1-KeyValueOfstringArrayOfstringty7Ep6D1 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique type id SOAP_TYPE_arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1() { arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1::soap_default(NULL); }
	virtual ~arr__ArrayOfKeyValueOfstringArrayOfstringty7Ep6D1() { }
};
#endif

#ifndef SOAP_TYPE_arr__ArrayOfstring
#define SOAP_TYPE_arr__ArrayOfstring (36)
/* arr:ArrayOfstring */
class SOAP_CMAC arr__ArrayOfstring
{
public:
	int __sizestring;	/* sequence of elements <string> */
	char **string;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique type id SOAP_TYPE_arr__ArrayOfstring */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         arr__ArrayOfstring() { arr__ArrayOfstring::soap_default(NULL); }
	virtual ~arr__ArrayOfstring() { }
};
#endif

#ifndef SOAP_TYPE__arr__ArrayOfKeyValueOfstringint_KeyValueOfstringint
#define SOAP_TYPE__arr__ArrayOfKeyValueOfstringint_KeyValueOfstringint (56)
/* arr:ArrayOfKeyValueOfstringint-KeyValueOfstringint */
class SOAP_CMAC _arr__ArrayOfKeyValueOfstringint_KeyValueOfstringint
{
public:
	char *Key;	/* optional element of type xsd:string */
	int Value;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 56; } /* = unique type id SOAP_TYPE__arr__ArrayOfKeyValueOfstringint_KeyValueOfstringint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _arr__ArrayOfKeyValueOfstringint_KeyValueOfstringint() { _arr__ArrayOfKeyValueOfstringint_KeyValueOfstringint::soap_default(NULL); }
	virtual ~_arr__ArrayOfKeyValueOfstringint_KeyValueOfstringint() { }
};
#endif

#ifndef SOAP_TYPE_arr__ArrayOfKeyValueOfstringint
#define SOAP_TYPE_arr__ArrayOfKeyValueOfstringint (37)
/* arr:ArrayOfKeyValueOfstringint */
class SOAP_CMAC arr__ArrayOfKeyValueOfstringint
{
public:
	int __sizeKeyValueOfstringint;	/* sequence of elements <KeyValueOfstringint> */
	_arr__ArrayOfKeyValueOfstringint_KeyValueOfstringint *KeyValueOfstringint;	/* optional element of type arr:ArrayOfKeyValueOfstringint-KeyValueOfstringint */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique type id SOAP_TYPE_arr__ArrayOfKeyValueOfstringint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         arr__ArrayOfKeyValueOfstringint() { arr__ArrayOfKeyValueOfstringint::soap_default(NULL); }
	virtual ~arr__ArrayOfKeyValueOfstringint() { }
};
#endif

#ifndef SOAP_TYPE__arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1_KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1
#define SOAP_TYPE__arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1_KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 (58)
/* arr:ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1-KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 */
class SOAP_CMAC _arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1_KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1
{
public:
	time_t Key;	/* required element of type xsd:dateTime */
	arr__ArrayOfKeyValueOfstringint *Value;	/* optional element of type arr:ArrayOfKeyValueOfstringint */
public:
	virtual int soap_type() const { return 58; } /* = unique type id SOAP_TYPE__arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1_KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1_KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1() { _arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1_KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1::soap_default(NULL); }
	virtual ~_arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1_KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1() { }
};
#endif

#ifndef SOAP_TYPE_arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1
#define SOAP_TYPE_arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 (38)
/* arr:ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 */
class SOAP_CMAC arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1
{
public:
	int __sizeKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1;	/* sequence of elements <KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1> */
	_arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1_KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 *KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1;	/* optional element of type arr:ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1-KeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 38; } /* = unique type id SOAP_TYPE_arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1() { arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1::soap_default(NULL); }
	virtual ~arr__ArrayOfKeyValueOfdateTimeArrayOfKeyValueOfstringintty7Ep6D1() { }
};
#endif

#ifndef SOAP_TYPE__arr__ArrayOfKeyValueOfdateTimeint_KeyValueOfdateTimeint
#define SOAP_TYPE__arr__ArrayOfKeyValueOfdateTimeint_KeyValueOfdateTimeint (61)
/* arr:ArrayOfKeyValueOfdateTimeint-KeyValueOfdateTimeint */
class SOAP_CMAC _arr__ArrayOfKeyValueOfdateTimeint_KeyValueOfdateTimeint
{
public:
	time_t Key;	/* required element of type xsd:dateTime */
	int Value;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 61; } /* = unique type id SOAP_TYPE__arr__ArrayOfKeyValueOfdateTimeint_KeyValueOfdateTimeint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _arr__ArrayOfKeyValueOfdateTimeint_KeyValueOfdateTimeint() { _arr__ArrayOfKeyValueOfdateTimeint_KeyValueOfdateTimeint::soap_default(NULL); }
	virtual ~_arr__ArrayOfKeyValueOfdateTimeint_KeyValueOfdateTimeint() { }
};
#endif

#ifndef SOAP_TYPE_arr__ArrayOfKeyValueOfdateTimeint
#define SOAP_TYPE_arr__ArrayOfKeyValueOfdateTimeint (39)
/* arr:ArrayOfKeyValueOfdateTimeint */
class SOAP_CMAC arr__ArrayOfKeyValueOfdateTimeint
{
public:
	int __sizeKeyValueOfdateTimeint;	/* sequence of elements <KeyValueOfdateTimeint> */
	_arr__ArrayOfKeyValueOfdateTimeint_KeyValueOfdateTimeint *KeyValueOfdateTimeint;	/* optional element of type arr:ArrayOfKeyValueOfdateTimeint-KeyValueOfdateTimeint */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique type id SOAP_TYPE_arr__ArrayOfKeyValueOfdateTimeint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         arr__ArrayOfKeyValueOfdateTimeint() { arr__ArrayOfKeyValueOfdateTimeint::soap_default(NULL); }
	virtual ~arr__ArrayOfKeyValueOfdateTimeint() { }
};
#endif

#ifndef SOAP_TYPE__arr__ArrayOfKeyValueOfintstring_KeyValueOfintstring
#define SOAP_TYPE__arr__ArrayOfKeyValueOfintstring_KeyValueOfintstring (63)
/* arr:ArrayOfKeyValueOfintstring-KeyValueOfintstring */
class SOAP_CMAC _arr__ArrayOfKeyValueOfintstring_KeyValueOfintstring
{
public:
	int Key;	/* required element of type xsd:int */
	char *Value;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 63; } /* = unique type id SOAP_TYPE__arr__ArrayOfKeyValueOfintstring_KeyValueOfintstring */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _arr__ArrayOfKeyValueOfintstring_KeyValueOfintstring() { _arr__ArrayOfKeyValueOfintstring_KeyValueOfintstring::soap_default(NULL); }
	virtual ~_arr__ArrayOfKeyValueOfintstring_KeyValueOfintstring() { }
};
#endif

#ifndef SOAP_TYPE_arr__ArrayOfKeyValueOfintstring
#define SOAP_TYPE_arr__ArrayOfKeyValueOfintstring (40)
/* arr:ArrayOfKeyValueOfintstring */
class SOAP_CMAC arr__ArrayOfKeyValueOfintstring
{
public:
	int __sizeKeyValueOfintstring;	/* sequence of elements <KeyValueOfintstring> */
	_arr__ArrayOfKeyValueOfintstring_KeyValueOfintstring *KeyValueOfintstring;	/* optional element of type arr:ArrayOfKeyValueOfintstring-KeyValueOfintstring */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique type id SOAP_TYPE_arr__ArrayOfKeyValueOfintstring */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         arr__ArrayOfKeyValueOfintstring() { arr__ArrayOfKeyValueOfintstring::soap_default(NULL); }
	virtual ~arr__ArrayOfKeyValueOfintstring() { }
};
#endif

#ifndef SOAP_TYPE__arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1_KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1
#define SOAP_TYPE__arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1_KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 (65)
/* arr:ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1-KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 */
class SOAP_CMAC _arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1_KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1
{
public:
	char *Key;	/* optional element of type xsd:string */
	arr__ArrayOfKeyValueOfintstring *Value;	/* optional element of type arr:ArrayOfKeyValueOfintstring */
public:
	virtual int soap_type() const { return 65; } /* = unique type id SOAP_TYPE__arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1_KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1_KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1() { _arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1_KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1::soap_default(NULL); }
	virtual ~_arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1_KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1() { }
};
#endif

#ifndef SOAP_TYPE_arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1
#define SOAP_TYPE_arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 (41)
/* arr:ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 */
class SOAP_CMAC arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1
{
public:
	int __sizeKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1;	/* sequence of elements <KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1> */
	_arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1_KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 *KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1;	/* optional element of type arr:ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1-KeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique type id SOAP_TYPE_arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1() { arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1::soap_default(NULL); }
	virtual ~arr__ArrayOfKeyValueOfstringArrayOfKeyValueOfintstringty7Ep6D1() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPage
#define SOAP_TYPE_ns1__ArrayOfPage (42)
/* ns1:ArrayOfPage */
class SOAP_CMAC ns1__ArrayOfPage
{
public:
	int __sizePage;	/* sequence of elements <Page> */
	class ns1__Page **Page;	/* optional element of type ns1:Page */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 42; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPage */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPage() { ns1__ArrayOfPage::soap_default(NULL); }
	virtual ~ns1__ArrayOfPage() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Page
#define SOAP_TYPE_ns1__Page (43)
/* ns1:Page */
class SOAP_CMAC ns1__Page
{
public:
	int *Id;	/* optional element of type xsd:int */
	char *Site;	/* optional element of type xsd:string */
	char *SitePage;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique type id SOAP_TYPE_ns1__Page */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Page() { ns1__Page::soap_default(NULL); }
	virtual ~ns1__Page() { }
};
#endif

#ifndef SOAP_TYPE___tempuri__GetLink
#define SOAP_TYPE___tempuri__GetLink (73)
/* Operation wrapper: */
struct __tempuri__GetLink
{
public:
	_tempuri__GetLink *tempuri__GetLink;	/* optional element of type tempuri:GetLink */
public:
	int soap_type() const { return 73; } /* = unique type id SOAP_TYPE___tempuri__GetLink */
};
#endif

#ifndef SOAP_TYPE___tempuri__GetNamesDictionary
#define SOAP_TYPE___tempuri__GetNamesDictionary (77)
/* Operation wrapper: */
struct __tempuri__GetNamesDictionary
{
public:
	_tempuri__GetNamesDictionary *tempuri__GetNamesDictionary;	/* optional element of type tempuri:GetNamesDictionary */
public:
	int soap_type() const { return 77; } /* = unique type id SOAP_TYPE___tempuri__GetNamesDictionary */
};
#endif

#ifndef SOAP_TYPE___tempuri__SendLinks
#define SOAP_TYPE___tempuri__SendLinks (81)
/* Operation wrapper: */
struct __tempuri__SendLinks
{
public:
	_tempuri__SendLinks *tempuri__SendLinks;	/* optional element of type tempuri:SendLinks */
public:
	int soap_type() const { return 81; } /* = unique type id SOAP_TYPE___tempuri__SendLinks */
};
#endif

#ifndef SOAP_TYPE___tempuri__SendAmountDictionary
#define SOAP_TYPE___tempuri__SendAmountDictionary (85)
/* Operation wrapper: */
struct __tempuri__SendAmountDictionary
{
public:
	_tempuri__SendAmountDictionary *tempuri__SendAmountDictionary;	/* optional element of type tempuri:SendAmountDictionary */
public:
	int soap_type() const { return 85; } /* = unique type id SOAP_TYPE___tempuri__SendAmountDictionary */
};
#endif

#ifndef SOAP_TYPE___tempuri__GetStats
#define SOAP_TYPE___tempuri__GetStats (89)
/* Operation wrapper: */
struct __tempuri__GetStats
{
public:
	_tempuri__GetStats *tempuri__GetStats;	/* optional element of type tempuri:GetStats */
public:
	int soap_type() const { return 89; } /* = unique type id SOAP_TYPE___tempuri__GetStats */
};
#endif

#ifndef SOAP_TYPE___tempuri__GetDailyStats
#define SOAP_TYPE___tempuri__GetDailyStats (93)
/* Operation wrapper: */
struct __tempuri__GetDailyStats
{
public:
	_tempuri__GetDailyStats *tempuri__GetDailyStats;	/* optional element of type tempuri:GetDailyStats */
public:
	int soap_type() const { return 93; } /* = unique type id SOAP_TYPE___tempuri__GetDailyStats */
};
#endif

#ifndef SOAP_TYPE___tempuri__GetStatsByName
#define SOAP_TYPE___tempuri__GetStatsByName (97)
/* Operation wrapper: */
struct __tempuri__GetStatsByName
{
public:
	_tempuri__GetStatsByName *tempuri__GetStatsByName;	/* optional element of type tempuri:GetStatsByName */
public:
	int soap_type() const { return 97; } /* = unique type id SOAP_TYPE___tempuri__GetStatsByName */
};
#endif

#ifndef SOAP_TYPE___tempuri__GetNames
#define SOAP_TYPE___tempuri__GetNames (101)
/* Operation wrapper: */
struct __tempuri__GetNames
{
public:
	_tempuri__GetNames *tempuri__GetNames;	/* optional element of type tempuri:GetNames */
public:
	int soap_type() const { return 101; } /* = unique type id SOAP_TYPE___tempuri__GetNames */
};
#endif

#ifndef SOAP_TYPE___tempuri__GetSites
#define SOAP_TYPE___tempuri__GetSites (105)
/* Operation wrapper: */
struct __tempuri__GetSites
{
public:
	_tempuri__GetSites *tempuri__GetSites;	/* optional element of type tempuri:GetSites */
public:
	int soap_type() const { return 105; } /* = unique type id SOAP_TYPE___tempuri__GetSites */
};
#endif

#ifndef SOAP_TYPE___tempuri__GetPages
#define SOAP_TYPE___tempuri__GetPages (109)
/* Operation wrapper: */
struct __tempuri__GetPages
{
public:
	_tempuri__GetPages *tempuri__GetPages;	/* optional element of type tempuri:GetPages */
public:
	int soap_type() const { return 109; } /* = unique type id SOAP_TYPE___tempuri__GetPages */
};
#endif

#ifndef SOAP_TYPE___tempuri__GetSearchPhrases
#define SOAP_TYPE___tempuri__GetSearchPhrases (113)
/* Operation wrapper: */
struct __tempuri__GetSearchPhrases
{
public:
	_tempuri__GetSearchPhrases *tempuri__GetSearchPhrases;	/* optional element of type tempuri:GetSearchPhrases */
public:
	int soap_type() const { return 113; } /* = unique type id SOAP_TYPE___tempuri__GetSearchPhrases */
};
#endif

#ifndef SOAP_TYPE___tempuri__SetSite
#define SOAP_TYPE___tempuri__SetSite (117)
/* Operation wrapper: */
struct __tempuri__SetSite
{
public:
	_tempuri__SetSite *tempuri__SetSite;	/* optional element of type tempuri:SetSite */
public:
	int soap_type() const { return 117; } /* = unique type id SOAP_TYPE___tempuri__SetSite */
};
#endif

#ifndef SOAP_TYPE___tempuri__SetName
#define SOAP_TYPE___tempuri__SetName (121)
/* Operation wrapper: */
struct __tempuri__SetName
{
public:
	_tempuri__SetName *tempuri__SetName;	/* optional element of type tempuri:SetName */
public:
	int soap_type() const { return 121; } /* = unique type id SOAP_TYPE___tempuri__SetName */
};
#endif

#ifndef SOAP_TYPE___tempuri__SetSearchPhrase
#define SOAP_TYPE___tempuri__SetSearchPhrase (125)
/* Operation wrapper: */
struct __tempuri__SetSearchPhrase
{
public:
	_tempuri__SetSearchPhrase *tempuri__SetSearchPhrase;	/* optional element of type tempuri:SetSearchPhrase */
public:
	int soap_type() const { return 125; } /* = unique type id SOAP_TYPE___tempuri__SetSearchPhrase */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (126)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 126; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (127)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 127; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (129)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 129; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (132)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 132; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (133)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 133; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */

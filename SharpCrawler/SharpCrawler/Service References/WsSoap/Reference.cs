//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharpCrawler.WsSoap {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSoap.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLink", ReplyAction="http://tempuri.org/IService/GetLinkResponse")]
        string GetLink();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLink", ReplyAction="http://tempuri.org/IService/GetLinkResponse")]
        System.Threading.Tasks.Task<string> GetLinkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetNamesDictionary", ReplyAction="http://tempuri.org/IService/GetNamesDictionaryResponse")]
        System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> GetNamesDictionary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetNamesDictionary", ReplyAction="http://tempuri.org/IService/GetNamesDictionaryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>>> GetNamesDictionaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendLinks", ReplyAction="http://tempuri.org/IService/SendLinksResponse")]
        void SendLinks(System.Collections.Generic.List<string> links);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendLinks", ReplyAction="http://tempuri.org/IService/SendLinksResponse")]
        System.Threading.Tasks.Task SendLinksAsync(System.Collections.Generic.List<string> links);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendAmountDictionary", ReplyAction="http://tempuri.org/IService/SendAmountDictionaryResponse")]
        void SendAmountDictionary(System.Collections.Generic.Dictionary<string, int> namesAmountDictionary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendAmountDictionary", ReplyAction="http://tempuri.org/IService/SendAmountDictionaryResponse")]
        System.Threading.Tasks.Task SendAmountDictionaryAsync(System.Collections.Generic.Dictionary<string, int> namesAmountDictionary);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : global::SharpCrawler.WsSoap.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<global::SharpCrawler.WsSoap.IService>, global::SharpCrawler.WsSoap.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetLink() {
            return base.Channel.GetLink();
        }
        
        public System.Threading.Tasks.Task<string> GetLinkAsync() {
            return base.Channel.GetLinkAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> GetNamesDictionary() {
            return base.Channel.GetNamesDictionary();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>>> GetNamesDictionaryAsync() {
            return base.Channel.GetNamesDictionaryAsync();
        }
        
        public void SendLinks(System.Collections.Generic.List<string> links) {
            base.Channel.SendLinks(links);
        }
        
        public System.Threading.Tasks.Task SendLinksAsync(System.Collections.Generic.List<string> links) {
            return base.Channel.SendLinksAsync(links);
        }
        
        public void SendAmountDictionary(System.Collections.Generic.Dictionary<string, int> namesAmountDictionary) {
            base.Channel.SendAmountDictionary(namesAmountDictionary);
        }
        
        public System.Threading.Tasks.Task SendAmountDictionaryAsync(System.Collections.Generic.Dictionary<string, int> namesAmountDictionary) {
            return base.Channel.SendAmountDictionaryAsync(namesAmountDictionary);
        }
    }
}
